//Fit Proportional Hazards Regression Model

use polars::prelude::*;
use statrs::distribution::{Continuous, Univariate};

struct CoxPHModel {
    pub hazard_ratios: Series,
    pub baseline_hazard: Series,
    pub baseline_cumulative_hazard: Series,
    pub baseline_survival: Series,
    pub baseline_cumulative_survival: Series,
    pub log_likelihood: f64,
    pub log_likelihood_ratio: f64,
    pub log_rank: f64,
    pub aic: f64,
    pub aicc: f64,
    pub bic: f64,
    pub concordance: f64,
    pub concordant_pairs: u64,
    pub discordant_pairs: u64,
    pub tied_x: u64,
    pub tied_y: u64,
    pub tied_xy: u64,
    pub censored: u64,
    pub n: u64,
    pub events: u64,
    pub event_times: Vec<f64>,
    pub event_counts: Vec<u64>,
    pub event_at_risk: Vec<u64>,
    pub event_cumulative: Vec<u64>,
    pub event_survival: Vec<f64>,
    pub event_cumulative_survival: Vec<f64>,
    pub event_hazard: Vec<f64>,
    pub event_cumulative_hazard: Vec<f64>,
    pub event_log_likelihood: Vec<f64>,
    pub event_log_likelihood_ratio: Vec<f64>,
    pub event_log_rank: Vec<f64>,
    pub event_aic: Vec<f64>,
    pub event_aicc: Vec<f64>,
    pub event_bic: Vec<f64>,
    pub event_concordance: Vec<f64>,
    pub event_concordant_pairs: Vec<u64>,
    pub event_discordant_pairs: Vec<u64>,
    pub event_tied_x: Vec<u64>,
    pub event_tied_y: Vec<u64>,
    pub event_tied_xy: Vec<u64>,
    pub event_censored: Vec<u64>,
    pub event_n: Vec<u64>,
}
